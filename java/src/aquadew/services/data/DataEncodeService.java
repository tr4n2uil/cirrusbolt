package aquadew.services.data;import javax.servlet.ServletRequest;import org.json.JSONObject;import org.json.JSONArray;import org.json.XML;import snowblozm.interfaces.Service;import snowblozm.interfaces.Block;import snowblozm.interfaces.Sequence;import snowblozm.core.SBException;/** *	@class DataEncodeService *	@desc Encodes array into JSON XML WDDX PLAIN HTML NONE data * *	@param type string Request type [memory] optional default 'json' ('json', 'xml', 'wddx', 'plain', 'html', 'none') *	@param data array Data to be encoded [memory] * *	@return result string Encoded data [memory] * *	@author Vibhaj Rajan <vibhaj8@gmail.com> *	**/public class DataEncodeService implements Service {		/**	 *	@interface Service	**/	public Block input() throws SBException {		return new JSONObject("{\			\"optional\":{\"type\":\"json\", \"data\": {} },\		}");	}		/**	 *	@interface Service	**/	public Block run(Block memory) throws SBException {		Block data = memory.getBlock("data");		Block result;		String type = memory.getString("type");				if(type.equalsIgnoreCase("json")){			result = data.toString();		} 		else if(type.equalsIgnoreCase("xml")){			result = XML.toString(data);		}		else if(type.equalsIgnoreCase("wddx")){			// To be implemented			result = null;		}		else if(type.equalsIgnoreCase("plain")){			// To be implemented			result = null;		}		else if(type.equalsIgnoreCase("html")){			// To be implemented			result = null;		}		else {			memory.put("valid", false);			memory.put("msg", "Invalid Data Type");			memory.put("status", 501);			memory.put("details", "Data encoding not supported for type : "+type+" @data.encode.service");			return memory;		}				memory.put("valid", true);		memory.put("msg", "Valid Data Encoding");		memory.put("status", 200);		memory.put("details", "Successfully executed");		return memory;	}		/**	 *	@interface Service	**/	public Sequence output() throws SBException {		return new JSONArray("[\"result\"]");	}	}